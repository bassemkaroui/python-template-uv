# ---------- builder ----------
FROM ghcr.io/astral-sh/uv:python{{ python_version }}-bookworm-slim AS builder

ARG ENVIRONMENT=prod

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Disable Python downloads, because we want to use the system interpreter.
ENV UV_PYTHON_DOWNLOADS=0

WORKDIR /workspaces/{{ project_name }}

# Install dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
	--mount=type=bind,source=uv.lock,target=uv.lock \
	--mount=type=bind,source=pyproject.toml,target=pyproject.toml \
	if [ "$ENVIRONMENT" = "prod" ]; then \
	uv sync --frozen --no-install-project --no-editable --no-dev; \
	else \
	uv sync --frozen --no-install-project --all-extras; \
	fi

COPY . .

# Install the project
RUN --mount=type=cache,target=/root/.cache/uv \
	if [ "$ENVIRONMENT" = "prod" ]; then \
	uv sync --frozen --no-editable --no-dev; \
	else \
	uv sync --frozen --all-extras; \
	fi

# ---------- production image ----------
FROM python:{{ python_version }}-slim-bookworm AS prod

{% if not privileged_container -%}
RUN groupadd -r {{ project_name }} && useradd -r -g {{ project_name }} -M -s /usr/sbin/nologin {{ project_name }}

RUN mkdir -p /workspaces/{{ project_name }} && chown -R {{ project_name }}:{{ project_name }} /workspaces
{%- endif %}

WORKDIR /workspaces/{{ project_name }}

# Pull in just the venv (with project code baked into siteâ€‘packages)
COPY --from=builder {% if not privileged_container %}--chown={{ project_name }}:{{ project_name }} {% endif %}/workspaces/{{ project_name }}/.venv .venv

ENV PATH="/workspaces/{{ project_name }}/.venv/bin:$PATH"

{% if not privileged_container -%}
USER {{ project_name }}
{%- endif %}

# CMD ["uvicorn", "{{ project_name }}:app", "--host", "0.0.0.0", "--port", "8000"]
# CMD ["sleep", "1000"]

# ---------- development image ----------
FROM python:{{ python_version }}-slim-bookworm AS dev

{% if not privileged_container -%}
RUN groupadd -g {{ gid }} {{ project_name }} && useradd -m -u {{ uid }} -g {{ gid }} -r {{ project_name }}

RUN mkdir -p /workspaces/{{ project_name }} && chown -R {{ project_name }}:{{ project_name }} /workspaces
{%- endif %}

WORKDIR /workspaces/{{ project_name }}

# Pull in the same venv (editable project install)
COPY --from=builder {% if not privileged_container %}--chown={{ project_name }}:{{ project_name }} {% endif %}/workspaces/{{ project_name }}/.venv .venv

COPY {% if not privileged_container %}--chown={{ project_name }}:{{ project_name }} {% endif %}. .

ENV PATH="/workspaces/{{ project_name }}/.venv/bin:$PATH"

{% if not privileged_container -%}
USER {{ project_name }}
{%- endif %}

# CMD ["uvicorn", "{{ project_name }}:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
